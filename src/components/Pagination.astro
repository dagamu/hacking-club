---
import type { Page } from "astro";
import type { HTMLAttributes } from "astro/types";
import { collapseRange } from "~/helpers/posts";
import { Icon } from "astro-icon";

export type Props = Omit<HTMLAttributes<"nav">, "slot"> & {
	page: Page<unknown>;
	allPages: string[];
	restRoute?: boolean;
};

const {
	page,
	allPages,
	restRoute = false,
	"aria-label": ariaLabel = "Pagination",
	...attrs
} = Astro.props;

const pages = allPages.map((href, i) => {
	return {
		pageNum: i + 1,
		text: String(i + 1),
		href,
	};
});

const collapsedPages = collapseRange(page, pages);
---

<nav aria-label={ariaLabel} {...attrs}>
	<ul>
		{
			page.url.prev && (
				<li>
					<a href={page.url.prev} rel="prefetch">
						<Icon
							name="mdi:arrow-left-thick"
							aria-label={`Go to page ${page.currentPage - 1} of ${
								page.lastPage
							}`}
						/>
					</a>
				</li>
			)
		}
		{
			collapsedPages.map((link) => (
				<li class="not-small">
					{!link.href ? (
						<p>{link.text}</p>
					) : (
						<a
							href={link.href}
							aria-current={
								link.pageNum === page.currentPage ? "page" : undefined
							}
							class={link.pageNum === page.currentPage ? "current" : undefined}
						>
							{link.pageNum}
						</a>
					)}
				</li>
			))
		}
		<li class="small-only">
			<p aria-current="page">Page {page.currentPage} of {page.lastPage}</p>
		</li>
		{
			page.url.next && (
				<li>
					<a href={page.url.next} rel="prefetch">
						<Icon
							name="mdi:arrow-right-thick"
							aria-label={`Go to page ${page.currentPage + 1} of ${
								page.lastPage
							}`}
						/>
					</a>
				</li>
			)
		}
	</ul>
</nav>

<style>
	@import "open-props/src/props.media.css";

	ul {
		display: flex;
		padding: 0;
		justify-content: center;
		align-items: center;
		margin-inline: auto;
		margin-block: var(--size-7);
		list-style: none;
		font-family: var(--font-mono);
		gap: var(--size-3);
		& > li {
			padding: 0;
			margin: 0;
		}
	}
	[astro-icon] {
		width: var(--size-4);
		height: var(--size-4);
		color: var(--link);
		&:hover {
			color: var(--link-hover);
		}
	}
	.small-only {
		display: initial;
		@media (--sm-n-above) {
			display: none;
		}
	}
	.not-small {
		display: none;
		@media (--sm-n-above) {
			display: inline-block;
		}
	}
	a,
	a:visited {
		color: var(--text-2);
		&.current {
			display: grid;
			place-items: center;
			border-radius: var(--radius-round);
			color: var(--surface-1);
			background-color: var(--brand);
			inline-size: var(--size-6);
			block-size: var(--size-6);
			line-height: 1;
			font-size: var(--font-size-1);
			font-weight: var(--font-weight-9);
		}
	}
</style>
